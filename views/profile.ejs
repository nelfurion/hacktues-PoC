<!-- views/profile.ejs -->
<!doctype html>
<html>
    <head>
        <title>HackTUES - Профил</title>
        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css">
        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css">
        <style>
            body {
                 padding-top:80px; word-wrap:break-word;
             }
            .edit {
                border: 1px solid grey;
                cursor: pointer;
            }
            ul {
                list-style-type: none;
                margin: 0;
                padding: 0;
            }
            label {
                width: 100px;
            }

            #team-form-div {
                //margin-left: 50%;
                //transform: translateX(-50%);
                text-align: center;
            }

            #invite-member {
                border: 1px solid grey;
                cursor: pointer;
            }

            span img {
                width: 100%;
                height: 100%;
            }

            .invite-action {
                display: inline-block;
                height: 10px;
                width: 10px;
                cursor: pointer;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="page-header text-center">
                <h1><span class="fa fa-anchor"></span> <%= user.name %></h1>
                <a href="/logout" class="btn btn-default btn-sm">Logout</a>
            </div>
            <div id="messages">
                <!-- system messages shown on page-load -->
                <% for (var i = 0; i < userMessages.length; i++) { %>
                    <div class="alert alert-danger"><%= userMessages[i] %></div>
                <% } %>
                <!-- more messages are loaded with handlebars -->
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="well">
                        <h3><span class="fa fa-user"></span>Потребител</h3>
                        <ul>
                            <li>
                                <strong>id: </strong><span><%= user._id %></span>
                                <span name="id" class="edit">Редактирай</span>
                            </li>
                            <li>
                                <strong>email: </strong><span><%= user.email %></span>
                                <span name="email" class="edit">Редактирай</span>
                            </li>
                            <li>
                                <strong>password: </strong><span><%= user.password %></span>
                                <span name="password" class="edit">Редактирай</span>
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="well" id="user-team-info">
                        <h3><span class="fa fa-user"></span>Отбор</h3>
                        <%  if (user.team) { %>
                            <span id="invite-member" class='pull-right'>Добави съотборник</span>

                            <ul>
                                <li>
                                    <strong>Отбор: </strong><span id="team-name"><%= user.team %></span>
                                    <span name="team" class="edit">Редактирай</span>
                                </li>
                                <% for (var i = 0; i < teamMembers.length; i++) { %>
                                    <li class="team-member"> -> <a href="user/<%= teamMembers[i].id %>"><%= teamMembers[i].name %></a></li>
                                <% } %>
                            </ul>
                        <% } else { %>
                            <span name="team" onclick="profileModule.appendTeamForm()" class="edit">Създай отбор</span>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/3.0.3/handlebars.min.js"></script>
        <script type="text/javascript" src="https://code.jquery.com/jquery-1.11.3.min.js"></script>
        <script type="text/system-messages-template" id="system-messages-template">
            {{#each messages}}
                {{#ifCond this.type '===' 'invite'}}
                    <p id="{{this.id}}">
                        {{this.text}}
                        <span class="invite-action accept">
                            <img src="http://ian.umces.edu/imagelibrary/albums/userpics/12789/normal_ian-symbol-positive.png" alt="Приеми" />
                        </span>
                        <span class="invite-action deny">
                            <img src="http://www.pd4pic.com/images/red-sign-icon-mark-symbol-cross-marks-orange.png" alt="Откажи" />
                        </span>
                    </p>
                {{/ifCond}}
            {{/each}}
        </script>
        <script type="text/javascript">
            Handlebars.registerHelper('ifCond', function (v1, operator, v2, options) {
                switch (operator) {
                    case '==':
                        return (v1 == v2) ? options.fn(this) : options.inverse(this);
                    case '===':
                        return (v1 === v2) ? options.fn(this) : options.inverse(this);
                    case '<':
                        return (v1 < v2) ? options.fn(this) : options.inverse(this);
                    case '<=':
                        return (v1 <= v2) ? options.fn(this) : options.inverse(this);
                    case '>':
                        return (v1 > v2) ? options.fn(this) : options.inverse(this);
                    case '>=':
                        return (v1 >= v2) ? options.fn(this) : options.inverse(this);
                    case '&&':
                        return (v1 && v2) ? options.fn(this) : options.inverse(this);
                    case '||':
                        return (v1 || v2) ? options.fn(this) : options.inverse(this);
                    default:
                        return options.inverse(this);
                }
            });

            var ProfileModule = (function ($, Handlebars) {
                profileModule = {};

                profileModule.user = {
                    id: '<%= user._id %>',
                    team: '<%= user.team %>',
                    name: '<%= user.name %>',
                    email: '<%= user.email %>',
                    userType: '<%= user.userType %>',
                    personalMessages: '<%= user.personalMessages %>',
                    systemMessages: '<%= user.systemMessages %>',
                };

                /*TODO ANTI KPK SHOULD BE FIXED */
                profileModule.initFunctionality = function (systemMessagesTemplate) {
                    /*TODO fix this event */
                    $('.edit').on('click', function(event) {
                        profileModule.editFieldEvent(event);
                    });

                    $('#messages').on('click', '.invite-action', function(event) {
                        event.preventDefault();
                        /* Act on the event */
                        $this = $(this);
                        var messageId = $this.parent().attr('id');
                        if ($this.hasClass('accept')) {
                            profileModule.respondToTeamInvite(messageId, true);
                        } else {
                            profileModule.respondToTeamInvite(messageId, false);
                        }

                    });;

                    $('#invite-member').on('click', function(event) {
                        event.preventDefault();
                        var inviteTemplate = $('<div />');
                        var inviteInput = $('<input />')
                            .attr('placeholder', 'email')
                            .attr('id', 'invite-user-email');;
                        inviteTemplate.append(inviteInput);

                        var inviteButton = $('<button />')
                            .html('Прати покана')
                            .on('click', function(event) {
                                event.preventDefault();
                                profileModule.sendTeamInvite('');
                            });
                        inviteTemplate.append(inviteButton);
                        inviteTemplate.insertAfter(this);
                    });

                    profileModule.initSystemMessagesTemplate(systemMessagesTemplate);

                    setInterval(function() {
                         profileModule.getUserSystemMessages();
                     }, 3000);
                }

                profileModule.initSystemMessagesTemplate = function (selector) {
                    var source = $(selector).html();
                    console.log('source: ' + source);
                    profileModule.messagesTemplate = Handlebars.compile(source);
                }

                profileModule.getUserSystemMessages = function () {
                    var userId = profileModule.user.id;

                    $.ajax({
                        url: '/getUserSystemMessages',
                        type: 'POST',
                        data: {
                            userId: userId
                        }
                    })
                    .done(function(messages) {
                        profileModule.user.systemMessages = messages;
                        //Handlebars wants object
                        var messavesObj = {
                            messages: messages
                        }
                        if (messages.length > 0) {
                            var messagesContainer =  $('#messages'),
                                messagesHtml = profileModule.messagesTemplate(messavesObj);

                            messagesContainer.html(messagesHtml);
                        }
                    })
                    .fail(function() {
                        alert('Error fetching messages!');
                    });
                }

                profileModule.appendTeamForm = function () {
                    $('#user-team-info').html('Извършва се...');
                    //As said in KPK - optimise only when needed
                    $.ajax({
                        url: '/createTeam',
                        type: 'GET'
                    })
                    .done(function(result) {
                        $('#user-team-info').html(result);

                        $('#team-form-submit').on('click', function(event) {
                            event.preventDefault();
                            profileModule.createTeam();
                        });
                    })
                    .fail(function() {
                        $('#user-team-info').html('Couldn\'t fetch form template!');
                    });
                }

                profileModule.createTeam = function () {
                    var teamDiv = $('#user-team-info');
                    var formData = {
                        name: $('#form-team-name').val(),
                        creator: {
                            _id: profileModule.user.id,
                            name: profileModule.user.name
                        },
                        projectName: $('#form-team-project').val(),
                        projectDescription: $('#form-team-project-description').val(),
                        technologies: $('#form-team-technologies').val()
                    };
                    if (formData.name && formData.projectName &&
                        formData.projectDescription && formData.technologies &&
                        formData.creator._id && formData.creator.name) {
                        teamDiv.html('Извършва се...');
                        $.ajax({
                            url: '/createTeam',
                            type: 'POST',
                            data: formData
                        })
                        .done(function(result) {
                            teamDiv.html(result);
                            profileModule.user.team = result.name;
                        })
                        .fail(function() {
                            console.log("error");
                        });
                    } else {
                        alert('Required fields are empty!');
                    }
                };

                profileModule.sendTeamInvite = function () {
                    $.ajax({
                        url: '/sendTeamInvite',
                        type: 'POST',
                        data: {
                            receiverEmail: $('#invite-user-email').val(),
                            teamName: profileModule.user.team
                        }
                    })
                    .done(function(result) {
                        alert(result);
                    })
                    .fail(function() {
                        console.log("error");
                    })
                    .always(function() {
                        console.log("complete");
                    });

                };

                profileModule.respondToTeamInvite = function (messageId, answer) {
                    $.ajax({
                        url: '/respondToTeamInvite',
                        type: 'POST',
                        data: {
                            userId: profileModule.user.id,
                            messageId: messageId,
                            answer: answer
                        }
                    })
                    .done(function() {
                        console.log("success");
                    })
                    .fail(function() {
                        console.log("error");
                    })
                    .always(function() {
                        console.log("complete");
                    });

                }

                profileModule.editFieldEvent = function (event) {
                    event.preventDefault();
                    $this = $(event.target);
                    profileModule.editField($this);
                }

                profileModule.editField = function (caller) {
                    var span = caller.prev();
                    var oldValue = span.html();
                    var newSpan = span.clone();
                    newSpan.html('Извършва се...');
                    span.remove();

                    var input = $('<input />')
                        .attr('type', 'text')
                        .attr('value', oldValue);

                    var li = caller.parent();
                    li.append(input);

                    var field = caller.attr('name');

                    var callerCopy = caller.clone();
                    caller.remove();

                    var update = $('<span />')
                        .addClass('edit')
                        .attr('id', 'update-team')
                        .css('margin-left', '5px')
                        .html('Запиши');
                    update.on('click', function(event) {
                        event.preventDefault();
                        input.remove();
                        update.remove();
                        li.append(newSpan);
                        var query = {
                            _id: profileModule.user.id
                        };

                        var newValue = input.val();
                        var options = {};
                        options[field] = newValue;

                        var data = {};
                        data.options = options;
                        data.query = query;
                        profileModule.updateUserInfo(data, newSpan, newValue, callerCopy);
                    });
                    li.append(update);
                }

                profileModule.updateUserInfo = function (data, container, newValue, callerCopy) {
                    $.ajax({
                        url: 'updateUserInfo',
                        type: 'POST',
                        dataType: 'json',
                        data: data
                    })
                    .done(function() {
                        container.html(newValue);
                        container.parent().append(callerCopy);
                        callerCopy.on('click', function(event) {
                            event.preventDefault();
                            profileModule.editFieldEvent(event);
                        });
                    })
                    .fail(function() {
                        var teamName = $('#team-name');
                        var oldHTML = teamName.html();
                        teamName.html(oldHTML + ' Could not change team name.');
                    });
                };

                return profileModule;
            }(jQuery, Handlebars));

            var profileModule = ProfileModule;

            profileModule.initFunctionality('#system-messages-template');
        </script>
    </body>
</html>
